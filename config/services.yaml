# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    locales: [en, fr, it, nl, es]
    mailer_user: '%env(MAILER_USER)%'
    sonata_cache.symfony.domain: '%env(SONATA_CACHE_SYMFONY_DOMAIN)%'
    sonata_cache.symfony.ip: '%env(SONATA_CACHE_SYMFONY_IP)%'
    sonata_cache.symfony.port: 80
    sonata.customer.block.breadcrumb_address.class: App\Application\Sonata\CustomerBundle\Block\Breadcrumb\CustomerAddressBreadcrumbBlockService
    sonata.order.block.breadcrumb_order.class: App\Application\Sonata\OrderBundle\Block\Breadcrumb\UserOrderBreadcrumbBlockService

imports:
    - { resource: "@ApplicationSonataCacheBundle/Resources/config/services.yml" }
    - { resource: "@ApplicationSonataProductBundle/Resources/config/services.yml" }

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    stof_doctrine_extensions.listener.translatable:
        class: "%stof_doctrine_extensions.listener.translatable.class%"
        public: true
        calls:
            - [setAnnotationReader, ['@annotation_reader']]
            - [setDefaultLocale, ['%stof_doctrine_extensions.default_locale%']]
            - [setTranslatableLocale, ['%stof_doctrine_extensions.default_locale%']]
            - [setTranslationFallback, ['%stof_doctrine_extensions.translation_fallback%']]
            - [setPersistDefaultLocaleTranslation, ['%stof_doctrine_extensions.persist_default_translation%']]
            - [setSkipOnLoad, ['%stof_doctrine_extensions.skip_translation_on_load%']]

    sonata.formatter.pool:
        class: Sonata\FormatterBundle\Formatter\Pool
        calls:
            - [setLogger, ['@logger']]
